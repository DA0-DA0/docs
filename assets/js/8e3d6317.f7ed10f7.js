"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[860],{5737:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var i=n(5893),o=n(1151);const r={},s="Upgrading a multisig",a={id:"upgrading/v1/multisig",title:"Upgrading a multisig",description:"There are newer versions available. You must first upgrade to V1, and then",source:"@site/docs/upgrading/v1/multisig.md",sourceDirName:"upgrading/v1",slug:"/upgrading/v1/multisig",permalink:"/upgrading/v1/multisig",draft:!1,unlisted:!1,editUrl:"https://github.com/DA0-DA0/docs/tree/main/docs/upgrading/v1/multisig.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Upgrading a DAO",permalink:"/upgrading/v1/dao"},next:{title:"Contribute to DAO DAO!",permalink:"/how-to-contribute"}},d={},l=[{value:"Why upgrade",id:"why-upgrade",level:2}];function u(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"upgrading-a-multisig",children:"Upgrading a multisig"}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:"There are newer versions available. You must first upgrade to V1, and then\nfollow the newer upgrade instructions to get to the most recent version."})}),"\n",(0,i.jsx)(t.p,{children:"To upgrade a beta multisig to a v1 multisig:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Create a new proposal."}),"\n",(0,i.jsxs)(t.li,{children:["Press the ",(0,i.jsx)(t.code,{children:"Add Component +"})," button and select the ",(0,i.jsx)(t.code,{children:"\ud83e\udda2 Upgrade to V1"}),"\ntemplate."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The template will then walk you through the steps to migrate to your new V1\nmultisig. After you fill out the template, make sure to double check that the\nnew multisig is configured correctly."}),"\n",(0,i.jsxs)(t.p,{children:["A good way of testing that your new multisig is correct is to make a new\nproposal in the new one called ",(0,i.jsx)(t.code,{children:"Acceptance of V1 multisig"}),". Then, have members\nvote on the proposal. If everyone votes and the proposal passes, it's a good\nsign that your multisig is configured correctly."]}),"\n",(0,i.jsx)(t.h2,{id:"why-upgrade",children:"Why upgrade"}),"\n",(0,i.jsxs)(t.p,{children:["By upgrading from beta to V1, you'll continue to receive new feature releases\nfrom DAO DAO and start using\n",(0,i.jsx)(t.a,{href:"https://github.com/DA0-DA0/dao-contracts/releases/tag/v1.0.0",children:"audited"})," smart\ncontracts."]}),"\n",(0,i.jsxs)(t.p,{children:["Beta DAOs and multisigs have been moved to\n",(0,i.jsx)(t.a,{href:"https://legacy.daodao.zone",children:"legacy.daodao.zone"})," and no longer receive new\nfeature releases."]})]})}function c(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>s});var i=n(7294);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);